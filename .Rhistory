data_spotreba <- select(moje_data, z1, z2, z3, z4, z6, z7, z9, z10, x9, a67, a1, a2, a4, a8, a74)
glimpse(data_spotreba)
names(data_spotreba) = c("pohlaví", "věk", "vzdělání", "zaměstnání hlavy rodiny", "velikost domácnosti", "počet dětí nad 18 let", "měsiční příjem domácnosti", "velikost místa bydliště", "měsíční příjem na osobu v domácnosti", "příjmy naší rodiny rostou pomaleji než ceny potravin", "CIL stravujete se celkově zdravěji", "CIL omezujete kalorickou hodnotu stravy", "CIL vybíráte si kvalitnější druhy potravin", "CIL omezujete spotřebu tuku", "CIL na jidle nešetřím, šetřím jinde")
dfx = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk))
dfx = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk)) %>%
mutate(věk2 = rec(věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65"))
dfx$věk2
dfx = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk),
věk2 = rec(věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65"))
dfx$věk2
## Zkuste si sama srovnat věk a věk2 a rozhodněte se co dál, já tady dál dělám to, že ty podivné případy vyhazuju,
# věk2 uložím do věk a věk2 se zbavím. Rozhodněte se, co dál -- věk teď má 5 kategorií: 25, 35, 45, 55 a 65,
# Myslím, že je lze už takhle použít v regresi, ale můžete si z nich udělat faktory, to už zvládnete :)
df = dfx %>% filter(!is.na(věk2)) %>% mutate(věk = věk2) %>% select(-věk2)
nrow(dfx)
nrow(df)
# df$`CIL omezujete spotřebu tuku`
names(df) = c("pohlaví", "věk", "vzdělání", "zaměstnání hlavy rodiny", "velikost domácnosti", "počet dětí nad 18 let", "měsiční příjem domácnosti", "velikost místa bydliště", "měsíční příjem na osobu v domácnosti", "příjmy naší rodiny rostou pomaleji než ceny potravin", "stravujete se celkově zdravěji", "omezujete kalorickou hodnotu stravy", "vybíráte si kvalitnější druhy potravin", "omezujete spotřebu tuku", "na jidle nešetřím, šetřím jinde")
glimpse(df)
m1 = glm(`stravujete se celkově zdravěji` ~ pohlaví, family = "binomial",
data = (df %>% filter(`stravujete se celkově zdravěji`> -1)))
summary(m1)
m2 = glm(`stravujete se celkově zdravěji` ~ pohlaví + vzdělání, family = "binomial",
data = (df %>% filter(`stravujete se celkově zdravěji`> -1)))
summary(m2)
m3 = glm(`stravujete se celkově zdravěji` ~ pohlaví * vzdělání, family = "binomial",
data = (df %>% filter(`stravujete se celkově zdravěji`> -1)))
summary(m3)
m4 = glm(`stravujete se celkově zdravěji` ~ pohlaví + vzdělání + `velikost domácnosti`,
family = "binomial",
data = (df %>% filter(`stravujete se celkově zdravěji`> -1) %>%
mutate(`velikost domácnosti` = relevel(`velikost domácnosti`, ref = 2))))
# ZJak změnit kategorii, kterou chcete kontrastovat: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
summary(m4)
## Hlavička
rm(list = ls())
## Package
library(dplyr)
library(readr)
library(stringr)
library(httr)
library(ggplot2)
library(forcats)
GET('http://207.154.245.100/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData.zip', overwrite = TRUE))
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv") )%>%
filter(!(str_detect(Name, "000015")|  # Příprava na další problematické místnosti, ano třeba 000018...
str_detect(Name, "000018")))  # V místnosti 15 je jen jeden soubor -- vstupní dotazník, jinak nic, jde tedy o nedohranou hru
files
bonus = unz(archive, files$Name[1]) %>% read_csv() %>% rename(player = id, celkem = bonus)
emaily = unz(archive, files$Name[2]) %>% read_csv() %>% rename(email = value)
PGG = unz(archive, files$Name[3]) %>% read_csv()
Q1 = unz(archive, files$Name[4]) %>% read_csv()
Q2 = unz(archive, files$Name[5]) %>% read_csv()
for (f in 1:(nrow(files)/5 - 1)) {
bonus = unz(archive, files$Name[f*5 + 1]) %>% read_csv() %>%
rename(player = id, celkem = bonus) %>% rbind(bonus, .)
emaily = unz(archive, files$Name[f*5 + 2]) %>% read_csv() %>%
rename(email = value) %>% rbind(emaily, .)
PGG = unz(archive, files$Name[f*5 + 3]) %>% read_csv() %>% rbind(PGG, .)
Q1 = unz(archive, files$Name[f*5 + 4]) %>% read_csv() %>% rbind(Q1, .)
Q2 = unz(archive, files$Name[f*5 + 5]) %>% read_csv() %>% rbind(Q2, .)
}
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16], -starts_with("time"), -type) %>% ungroup() %>%
mutate(across(.cols = znajiSe:kooperujeCiz,
.fns = ~(recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer())),  # `stará hodnota` = "nová hodnota"
across(.cols = communication:strategy,
.fns = as_factor)) %>%
rename(realHrac = real1, realSkup = real2) # `nový název` = `starý název`
glimpse(vysledek)
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem) #%>% filter(!str_detect(email, "fake@"))
vyhodnoceni
## Na přehled vývoje hry asi bude stačit PGG, ale kdyby to bylo potřeba spojit s kontextovými dat,
# tak tady je to všechno spojené
celkova = left_join(PGG, vysledek, by = c("player", "session"))
celkova
# Vytvoření dat
KA1_kontext = vysledek %>% select(-email)
KA1_pgg = PGG
KA1_spojeno = left_join(KA1_pgg, KA1_kontext, by = c("player", "session"))
# Uložení dat
save(KA1_kontext, KA1_pgg, KA1_spojeno, file = "KA1_vse.RData")
load(file = "KA1_vse.RData")
GET('http://207.154.245.100/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData.zip', overwrite = TRUE))
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv") )%>%
filter(!(str_detect(Name, "000015")|  # Příprava na další problematické místnosti, ano třeba 000018...
str_detect(Name, "000018")))  # V místnosti 15 je jen jeden soubor -- vstupní dotazník, jinak nic, jde tedy o nedohranou hru
files
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_point()
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter()
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter(width = 0, height = 0.2)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session))
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session), nrow = 2)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session), nrow = 2) +
guides(legend = NULL)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session), nrow = 2) +
guides(color = NULL)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session), nrow = 2) +
guides_color(NULL)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session), nrow = 2) +
guide_color(NULL)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session), nrow = 2) +
guide_legend(NULL)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session), nrow = 2) +
guides(color = "")
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session), nrow = 2) +
guides(color = "")
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session), nrow = 2) +
guides(color = F)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), groups = session)) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session), nrow = 2) +
guides(color = F)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +
facet_wrap(vars(session), nrow = 2) +
guides(color = F)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +
stat_summary(fun.data = mean, fun.args = list(mult = 1)) +
facet_wrap(vars(session), nrow = 2) +
guides(color = F)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +
stat_summary(fun.data = mean, fun.args = list(mult = 1), geom = "line") +
facet_wrap(vars(session), nrow = 2) +
guides(color = F)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +
stat_summary(fun = mean, fun.args = list(mult = 1), geom = "line") +
facet_wrap(vars(session), nrow = 2) +
guides(color = F)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +
stat_summary(fun = mean, fun.args = list(mult = 1), geom = "line", size = 0.5) +
facet_wrap(vars(session), nrow = 2) +
guides(color = F)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +
stat_summary(fun = mean, fun.args = list(mult = 1), geom = "line", size = 0.5, color = "#808080") +
facet_wrap(vars(session), nrow = 2) +
guides(color = F)
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +
stat_summary(fun = mean, fun.args = list(mult = 1), geom = "line", size = 0.5, color = "#808080") +
facet_wrap(vars(session), nrow = 2) +
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% summarise(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 3, , margins = c("session")) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 3, margins = c("session")) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 3, margins = T) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_grid(nrows = vars(session), margins = T) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_grid(nrow = vars(session), margins = T) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_grid(rows = vars(session), margins = T) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player), group = session)) +
geom_jitter(width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, group = session)) +
geom_jitter(col = "blue", alpha = 0.5, width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, group = session)) +
geom_jitter(col = "blue", alpha = 0.25, width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, group = session)) +
geom_jitter(col = "blue", alpha = 0.2, size = 2, width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, group = session)) +
geom_jitter(col = "blue", alpha = 0.2, size = 2, width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
labs(caption = "Tlustá modrá čára ukazuje průměrnou investici do společného účtu za kolo za celý turnaj.
Tenká šedá čára ukazuje průměrnou investici za kolo v příslušné skupině.
Modré body ukazují investice jednotlivých hráčů. Graf je rozdělený do panelů podle skupin.") +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, group = session)) +
geom_jitter(col = "blue", alpha = 0.2, size = 2, width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
labs(caption = "Vysvětlení pro Pavlínu:
Tlustá modrá čára ukazuje průměrnou investici do společného účtu za kolo za celý turnaj.
Tenká šedá čára ukazuje průměrnou investici za kolo v příslušné skupině.
Modré body ukazují investice jednotlivých hráčů.
Graf je rozdělený do panelů podle skupin.") +
theme_minimal()
ggplot(PGG, aes(x = stage.round, y = contribution, group = session)) +
geom_jitter(col = "blue", alpha = 0.2, size = 2, width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
labs(caption = "Vysvětlení pro Pavlínu:
Tlustá modrá čára ukazuje průměrnou investici do společného účtu za kolo za celý turnaj.
Tenká šedá čára ukazuje průměrnou investici za kolo v příslušné skupině.
Modré body ukazují investice jednotlivých hráčů.
Graf je rozdělený do panelů podle skupin.") +
theme_minimal() +
scale_x_continuous(breaks = seq(0, 10, 2))
ggplot(PGG, aes(x = stage.round, y = contribution, group = session)) +
geom_jitter(col = "blue", alpha = 0.2, size = 2, width = 0, height = 0.2) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
labs(caption = "Vysvětlení pro Pavlínu:
Tlustá modrá čára ukazuje průměrnou investici do společného účtu za kolo za celý turnaj.
Tenká šedá čára ukazuje průměrnou investici za kolo v příslušné skupině.
Modré body ukazují investice jednotlivých hráčů.
Graf je rozdělený do panelů podle skupin.") +
theme_minimal() +
scale_x_continuous(breaks = seq(0, 10, 2)) +
scale_y_continuous(breaks = seq(0, 20, 2))
ggplot(PGG, aes(x = stage.round, y = contribution, group = session)) +
geom_jitter(col = "blue", alpha = 0.2, size = 2, width = 0, height = 0.35) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
labs(caption = "Vysvětlení pro Pavlínu:
Tlustá modrá čára ukazuje průměrnou investici do společného účtu za kolo za celý turnaj.
Tenká šedá čára ukazuje průměrnou investici za kolo v příslušné skupině.
Modré body ukazují investice jednotlivých hráčů.
Graf je rozdělený do panelů podle skupin.") +
theme_minimal() +
scale_x_continuous(breaks = seq(0, 10, 2)) +
scale_y_continuous(breaks = seq(0, 20, 2))
ggplot(PGG, aes(x = stage.round, y = contribution, group = session)) +
geom_jitter(col = "blue", alpha = 0.2, size = 2, width = 0, height = 0.3) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
labs(caption = "Vysvětlení pro Pavlínu:
Tlustá modrá čára ukazuje průměrnou investici do společného účtu za kolo za celý turnaj.
Tenká šedá čára ukazuje průměrnou investici za kolo v příslušné skupině.
Modré body ukazují investice jednotlivých hráčů.
K investicím hráčů je přimíchád drobný šum (+/- 0.3), aby byl zřetelnější překryv hodnot.
Graf je rozdělený do panelů podle skupin.") +
theme_minimal() +
scale_x_continuous(breaks = seq(0, 10, 2)) +
scale_y_continuous(breaks = seq(0, 20, 2))
ggplot(PGG, aes(x = stage.round, y = contribution, group = session)) +
geom_jitter(col = "blue", alpha = 0.2, size = 2, width = 0, height = 0.3) +  # Individuální pozorování
stat_summary(fun = mean,   # Průměr skupiny za kolo
fun.args = list(mult = 1),
geom = "line",
size = 0.5,
color = "#808080") +
geom_line(data = (PGG %>% group_by(stage.round) %>% mutate(contribution = mean(contribution, na.rm = T))),
aes(x = stage.round, y = contribution),
color = "steelblue",
size = 2) +  # Průměr za celý turnaj
facet_wrap(vars(session), nrow = 2) +  # Rozdělení do panelů podle skupin
guides(color = F) +
labs(caption = "Vysvětlení pro Pavlínu:
Tlustá modrá čára ukazuje průměrnou investici do společného účtu za kolo za celý turnaj.
Tenká šedá čára ukazuje průměrnou investici za kolo v příslušné skupině.
Modré body ukazují investice jednotlivých hráčů, které byly celé číslo v intervalu 0--20.
K investicím hráčů je přičten drobný šum (+/- 0.3), aby byl zřetelnější překryv hodnot.
Graf je rozdělený do panelů podle skupin.") +
theme_minimal() +
scale_x_continuous(breaks = seq(0, 10, 2)) +
scale_y_continuous(breaks = seq(0, 20, 2))
