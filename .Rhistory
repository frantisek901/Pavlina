}
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16])
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem) #%>% filter(!str_detect(email, "fake@"))
vyhodnoceni
files
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem) #%>% filter(!str_detect(email, "fake@"))
vyhodnoceni
## Na přehled vývoje hry asi bude stačit dfPGG, ale kdyby to bylo potřeba spojit s kontextovými dat,
# tak tady je to všechno spojené
celkova = left_join(PGG, vysledek, by = c("player", "session"))
celkova
# ## Vývojový graf --------------------------------------------------------
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_line()
PGG %>% group_by(stage.round, session) %>% summarise(contribution = mean(contribution)) %>%
ggplot(aes(x = stage.round, y = contribution, col = session)) +
geom_line()
PGG %>% group_by(stage.round) %>% summarise(contribution = mean(contribution)) %>%
ggplot(aes(x = stage.round, y = contribution)) +
geom_line()
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16])
vysledek
library(sjmisc)
glimpse(vysledek)
## Kvůli úpravě dat si musím napsat rychle vlastní funkci,
# je to rekódování 4 proměnných, proto je tam několik kategorií...
uprava = function(x) {
recode(x, `7-velmi dobře` = "7", `7-velmi blízký` = "7", `7-velmi spolupracuji` ="7")
}
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>%
mutate(across(cols = 8:11, .fns = uprava))
## Kvůli úpravě dat si musím napsat rychle vlastní funkci,
# je to rekódování 4 proměnných, proto je tam několik kategorií...
uprava = function(x) {
recode(x, `7-velmi dobře` = "7", `7-velmi blízký` = "7", `7-velmi spolupracuji` ="7")
}
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>%
mutate(across(cols = c(8:11), .fns = uprava))
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>%
mutate(across(cols = c(8:11),
.fns = ~recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7")))
glimpse(vysledek)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>%
mutate(across(cols = c(8:11),
.fns = ~recode(., `7-velmi dobře` = 7, `7-velmi blízký` = 7,
`7-velmi spolupracuji` = 7, `1-vůbec nespolupracuji` = 1)))
glimpse(vysledek)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>%
mutate(across(cols = c(8:11),
.fns = ~recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1")))
glimpse(vysledek)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>%
mutate(across(cols = c(8:11),
.fns = ~recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1")))
glimpse(vysledek)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>%
mutate(across(cols = 8:11,
.fns = ~recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1")))
warnings()
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>% ungroup() %>%
mutate(across(cols = 8:11,
.fns = ~recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1")))
glimpse(vysledek)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>% ungroup() %>%
mutate(across(cols = znajiSe:kooperujeCiz,
.fns = ~recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1")))
glimpse(vysledek)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>% ungroup() %>%
mutate(across(cols = znajiSe:kooperujeCiz,
.fns = ~(recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer())))
glimpse(vysledek)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>% ungroup() %>%
mutate(across(.cols = znajiSe:kooperujeCiz,
.fns = ~(recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer())))
glimpse(vysledek)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>% ungroup() %>%
mutate(across(.cols = znajiSe:kooperujeCiz,
.fns = ~recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer()))
glimpse(vysledek)
iris %>%
group_by(Species) %>%
summarise(across(starts_with("Sepal"), list(mean = mean, sd = sd)))
iris %>%
group_by(Species) %>%
summarise(across(starts_with("Sepal"), list(mean, sd), .names = "{.col}.fn{.fn}"))
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>% ungroup() %>%
mutate(across(.cols = znajiSe:kooperujeCiz,
.fns = ~(recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer())))
glimpse(vysledek)
library(forcats)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16]) %>% ungroup() %>%
mutate(across(.cols = znajiSe:kooperujeCiz,
.fns = ~(recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer())),
across(.cols = communication:strategy,
.fns = as_factor))
glimpse(vysledek)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16], -starts_with("time")) %>% ungroup() %>%
mutate(across(.cols = znajiSe:kooperujeCiz,
.fns = ~(recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer())),
across(.cols = communication:strategy,
.fns = as_factor))
glimpse(vysledek)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16], -starts_with("time", -type)) %>% ungroup() %>%
mutate(across(.cols = znajiSe:kooperujeCiz,
.fns = ~(recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer())),
across(.cols = communication:strategy,
.fns = as_factor))
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16], -starts_with("time"), -type) %>% ungroup() %>%
mutate(across(.cols = znajiSe:kooperujeCiz,
.fns = ~(recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer())),
across(.cols = communication:strategy,
.fns = as_factor))
glimpse(vysledek)
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16], -starts_with("time"), -type) %>% ungroup() %>%
mutate(across(.cols = znajiSe:kooperujeCiz,
.fns = ~(recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer())),  # `stará hodnota` = "nová hodnota"
across(.cols = communication:strategy,
.fns = as_factor)) %>%
rename(realHrac = real1, realSkup = real2) # `nový název` = `starý název`
glimpse(vysledek)
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem) #%>% filter(!str_detect(email, "fake@"))
vyhodnoceni
## Na přehled vývoje hry asi bude stačit dfPGG, ale kdyby to bylo potřeba spojit s kontextovými dat,
# tak tady je to všechno spojené
celkova = left_join(PGG, vysledek, by = c("player", "session"))
celkova
emaily
PGG
glimpse(vysledek)
KA1_kontext = vysledek %>% select(-email)
PGG
KA1_pgg = PGG
KA1_kontext = vysledek %>% select(-email)
KA1_pgg = PGG
KA1_spojeno = left_join(KA1_pgg, KA1_kontext, by = c("player", "session"))
# Uložení dat
save(KA1_kontext, "KA1_kontext.RData")
# Uložení dat
save(KA1_kontext, file = "KA1_kontext.RData")
save(KA1_pgg, file = "KA1_pgg.RData")
save(KA1_spojeno, file = "KA1_spojeno.RData")
save(KA1_kontext, KA1_pgg, KA1_spojeno, file = "KA1_vse.RData")
load(file = "KA1_vse.RData")
## Hlavička
rm(list = ls())
load(file = "KA1_vse.RData")
load(file = "KA1_vse.RData")
load(file = "https://github.com/frantisek901/pavlina/KA1_vse.RData")
load(file = "https://github.com/frantisek901/Pavlina/blob/main/KA1_vse.RData")
load(file = "https://github.com/frantisek901/Pavlina/raw/main/KA1_vse.RData")
load(file = "https://github.com/frantisek901/Pavlina/raw/main/KA1_vse.RData")
GET("https://github.com/frantisek901/Pavlina/raw/main/KA1_vse.RData",
write_disk("KA1_vse.RData"), overwrite = T)
GET("https://github.com/frantisek901/Pavlina/raw/main/KA1_vse.RData",
write_disk("KA1_vse.RData", overwrite = T))
load(file = "KA1_vse.RData")
GET("https://github.com/frantisek901/Pavlina/raw/main/KA1_vse.RData",
write_disk("KA1_vse.RData", overwrite = T))
load(file = "KA1_vse.RData")
GET('http://207.154.245.100/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData.zip', overwrite = TRUE))
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv") )%>%
filter(!str_detect(Name, "000015"))  # V místnosti 15 je jen jeden soubor -- vstupní dotazník, jinak nic, jde tedy o nedohranou hru
files
bonus = unz(archive, files$Name[1]) %>% read_csv() %>% rename(player = id, celkem = bonus)
emaily = unz(archive, files$Name[2]) %>% read_csv() %>% rename(email = value)
PGG = unz(archive, files$Name[3]) %>% read_csv()
Q1 = unz(archive, files$Name[4]) %>% read_csv()
Q2 = unz(archive, files$Name[5]) %>% read_csv()
for (f in 1:(nrow(files)/5 - 1)) {
bonus = unz(archive, files$Name[f*5 + 1]) %>% read_csv() %>%
rename(player = id, celkem = bonus) %>% rbind(bonus, .)
emaily = unz(archive, files$Name[f*5 + 2]) %>% read_csv() %>%
rename(email = value) %>% rbind(emaily, .)
PGG = unz(archive, files$Name[f*5 + 3]) %>% read_csv() %>% rbind(PGG, .)
Q1 = unz(archive, files$Name[f*5 + 4]) %>% read_csv() %>% rbind(Q1, .)
Q2 = unz(archive, files$Name[f*5 + 5]) %>% read_csv() %>% rbind(Q2, .)
}
## Kvůli úpravě dat si musím napsat rychle vlastní funkci,
# je to rekódování 4 proměnných, proto je tam několik kategorií...
uprava = function(x) {
recode(x, `7-velmi dobře` = "7", `7-velmi blízký` = "7", `7-velmi spolupracuji` ="7")
}
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16], -starts_with("time"), -type) %>% ungroup() %>%
mutate(across(.cols = znajiSe:kooperujeCiz,
.fns = ~(recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer())),  # `stará hodnota` = "nová hodnota"
across(.cols = communication:strategy,
.fns = as_factor)) %>%
rename(realHrac = real1, realSkup = real2) # `nový název` = `starý název`
glimpse(vysledek)
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem) #%>% filter(!str_detect(email, "fake@"))
vyhodnoceni
## Na přehled vývoje hry asi bude stačit PGG, ale kdyby to bylo potřeba spojit s kontextovými dat,
# tak tady je to všechno spojené
celkova = left_join(PGG, vysledek, by = c("player", "session"))
celkova
# Vytvoření dat
KA1_kontext = vysledek %>% select(-email)
KA1_pgg = PGG
KA1_spojeno = left_join(KA1_pgg, KA1_kontext, by = c("player", "session"))
# Uložení dat
save(KA1_kontext, KA1_pgg, KA1_spojeno, file = "KA1_vse.RData")
load(file = "KA1_vse.RData")
# Načtení dat z GitHubu
GET("https://github.com/frantisek901/Pavlina/raw/main/KA1_vse.RData",
write_disk("KA1_vse.RData", overwrite = T))
load(file = "KA1_vse.RData")
load(file = "KA1_vse.RData")
# Vytvoření dat
KA1_kontext = vysledek %>% select(-email)
KA1_pgg = PGG
KA1_spojeno = left_join(KA1_pgg, KA1_kontext, by = c("player", "session"))
# Uložení dat
save(KA1_kontext, KA1_pgg, KA1_spojeno, file = "KA1_vse.RData")
load(file = "KA1_vse.RData")
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv") )%>%
filter(!str_detect(Name, c("000015", "000011")))  # V místnosti 15 je jen jeden soubor -- vstupní dotazník, jinak nic, jde tedy o nedohranou hru
files
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv") )%>%
filter(!(str_detect(Name, "000015")|str_detect(Name, "000011")))  # V místnosti 15 je jen jeden soubor -- vstupní dotazník, jinak nic, jde tedy o nedohranou hru
files
GET('http://207.154.245.100/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData.zip', overwrite = TRUE))
GET('http://134.122.66.93/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData2.zip', overwrite = TRUE))
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv") )%>%
filter(!(str_detect(Name, "000015")|  # Příprava na další problematické místnosti
str_detect(Name, "000015")))  # V místnosti 15 je jen jeden soubor -- vstupní dotazník, jinak nic, jde tedy o nedohranou hru
files
archive = "aktualniData2.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv") )%>%
filter(!(str_detect(Name, "000015")|  # Příprava na další problematické místnosti, ano třeba 000018...
str_detect(Name, "000018")))  # V místnosti 15 je jen jeden soubor -- vstupní dotazník, jinak nic, jde tedy o nedohranou hru
files
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv") )%>%
filter(!(str_detect(Name, "000015")|  # Příprava na další problematické místnosti, ano třeba 000018...
str_detect(Name, "000018")))  # V místnosti 15 je jen jeden soubor -- vstupní dotazník, jinak nic, jde tedy o nedohranou hru
files
bonus = unz(archive, files$Name[1]) %>% read_csv() %>% rename(player = id, celkem = bonus)
emaily = unz(archive, files$Name[2]) %>% read_csv() %>% rename(email = value)
PGG = unz(archive, files$Name[3]) %>% read_csv()
Q1 = unz(archive, files$Name[4]) %>% read_csv()
Q2 = unz(archive, files$Name[5]) %>% read_csv()
for (f in 1:(nrow(files)/5 - 1)) {
bonus = unz(archive, files$Name[f*5 + 1]) %>% read_csv() %>%
rename(player = id, celkem = bonus) %>% rbind(bonus, .)
emaily = unz(archive, files$Name[f*5 + 2]) %>% read_csv() %>%
rename(email = value) %>% rbind(emaily, .)
PGG = unz(archive, files$Name[f*5 + 3]) %>% read_csv() %>% rbind(PGG, .)
Q1 = unz(archive, files$Name[f*5 + 4]) %>% read_csv() %>% rbind(Q1, .)
Q2 = unz(archive, files$Name[f*5 + 5]) %>% read_csv() %>% rbind(Q2, .)
}
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16], -starts_with("time"), -type) %>% ungroup() %>%
mutate(across(.cols = znajiSe:kooperujeCiz,
.fns = ~(recode(., `7-velmi dobře` = "7", `7-velmi blízký` = "7",
`7-velmi spolupracuji` ="7", `1-vůbec nespolupracuji` = "1",
`1-vůbec` = "1") %>% as.integer())),  # `stará hodnota` = "nová hodnota"
across(.cols = communication:strategy,
.fns = as_factor)) %>%
rename(realHrac = real1, realSkup = real2) # `nový název` = `starý název`
glimpse(vysledek)
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem) #%>% filter(!str_detect(email, "fake@"))
vyhodnoceni
View(vyhodnoceni)
## Na přehled vývoje hry asi bude stačit PGG, ale kdyby to bylo potřeba spojit s kontextovými dat,
# tak tady je to všechno spojené
celkova = left_join(PGG, vysledek, by = c("player", "session"))
celkova
# Vytvoření dat
KA1_kontext = vysledek %>% select(-email)
KA1_pgg = PGG
KA1_spojeno = left_join(KA1_pgg, KA1_kontext, by = c("player", "session"))
# Uložení dat
save(KA1_kontext, KA1_pgg, KA1_spojeno, file = "KA1_vse.RData")
load(file = "KA1_vse.RData")
# Načtení dat z GitHubu
GET("https://github.com/frantisek901/Pavlina/raw/main/KA1_vse.RData",
write_disk("KA1_vse.RData", overwrite = T))
load(file = "KA1_vse.RData")
# ## Vývojový graf --------------------------------------------------------
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_line()
PGG %>% group_by(stage.round, session) %>% summarise(contribution = mean(contribution)) %>%
ggplot(aes(x = stage.round, y = contribution, col = session)) +
geom_line()
PGG %>% group_by(stage.round) %>% summarise(contribution = mean(contribution)) %>%
ggplot(aes(x = stage.round, y = contribution)) +
geom_line()
PGG %>% group_by(stage.round, session) %>% summarise(contribution = mean(contribution)) %>%
ggplot(aes(x = stage.round, y = contribution, col = session)) +
geom_line()
knitr::opts_chunk$set(echo = TRUE)
dfx = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk))
## Najdeme názvy souborů
archive = "CSDA00057 (3).zip"
files = unzip(archive, list = T) %>% filter(Length > 0)
View(files)
## Samotné načtení
moje_data = unz(archive, files$Name[1]) %>% read_sav()
library(readxl)
library(readxl)
library(lubridate)
library(tibble)
library(lubridate)
library(tibble)
library(forcats)
library(haven)
library(readxl)
library(lubridate)
library(tibble)
library(forcats)
library(haven)
library(foreign)
library(dplyr)
## Samotné načtení
moje_data = unz(archive, files$Name[1]) %>% read_sav()
data_spotreba <- select(moje_data, z1, z2, z3, z4, z6, z7, z9, z10, x9, a67, a1, a2, a4, a8, a74)
glimpse(data_spotreba)
names(data_spotreba) = c("pohlaví", "věk", "vzdělání", "zaměstnání hlavy rodiny", "velikost domácnosti", "počet dětí nad 18 let", "měsiční příjem domácnosti", "velikost místa bydliště", "měsíční příjem na osobu v domácnosti", "příjmy naší rodiny rostou pomaleji než ceny potravin", "CIL stravujete se celkově zdravěji", "CIL omezujete kalorickou hodnotu stravy", "CIL vybíráte si kvalitnější druhy potravin", "CIL omezujete spotřebu tuku", "CIL na jidle nešetřím, šetřím jinde")
dfx = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk))
dfx = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk)) %>%
mutate(věk2 = rec(věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65"))
dfx$věk2
dfx = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk),
věk2 = rec(věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65"))
dfx$věk2
## Zkuste si sama srovnat věk a věk2 a rozhodněte se co dál, já tady dál dělám to, že ty podivné případy vyhazuju,
# věk2 uložím do věk a věk2 se zbavím. Rozhodněte se, co dál -- věk teď má 5 kategorií: 25, 35, 45, 55 a 65,
# Myslím, že je lze už takhle použít v regresi, ale můžete si z nich udělat faktory, to už zvládnete :)
df = dfx %>% filter(!is.na(věk2)) %>% mutate(věk = věk2) %>% select(-věk2)
nrow(dfx)
nrow(df)
# df$`CIL omezujete spotřebu tuku`
names(df) = c("pohlaví", "věk", "vzdělání", "zaměstnání hlavy rodiny", "velikost domácnosti", "počet dětí nad 18 let", "měsiční příjem domácnosti", "velikost místa bydliště", "měsíční příjem na osobu v domácnosti", "příjmy naší rodiny rostou pomaleji než ceny potravin", "stravujete se celkově zdravěji", "omezujete kalorickou hodnotu stravy", "vybíráte si kvalitnější druhy potravin", "omezujete spotřebu tuku", "na jidle nešetřím, šetřím jinde")
glimpse(df)
m1 = glm(`stravujete se celkově zdravěji` ~ pohlaví, family = "binomial",
data = (df %>% filter(`stravujete se celkově zdravěji`> -1)))
summary(m1)
m2 = glm(`stravujete se celkově zdravěji` ~ pohlaví + vzdělání, family = "binomial",
data = (df %>% filter(`stravujete se celkově zdravěji`> -1)))
summary(m2)
m3 = glm(`stravujete se celkově zdravěji` ~ pohlaví * vzdělání, family = "binomial",
data = (df %>% filter(`stravujete se celkově zdravěji`> -1)))
summary(m3)
m4 = glm(`stravujete se celkově zdravěji` ~ pohlaví + vzdělání + `velikost domácnosti`,
family = "binomial",
data = (df %>% filter(`stravujete se celkově zdravěji`> -1) %>%
mutate(`velikost domácnosti` = relevel(`velikost domácnosti`, ref = 2))))
# ZJak změnit kategorii, kterou chcete kontrastovat: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
summary(m4)
