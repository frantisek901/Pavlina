souhlasi = 1, nesouhlasi = 0)))
# %>%
#   mutate(věk = recode(věk, `1` = 25L, `2` = 35L, `3` = 45L, `4` = 55L, `5` = 65L))
class(df$věk)
levels(df$věk)
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = recode(věk, `18-29 let` = "25", `30-39 let` = "35", `40-49 let` = "45",
`50-59 let` = "55", `60+ let` = "65"))
class(df$věk)
levels(df$věk)
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = recode(věk, `18-29 let` = "25", `30-39 let` = "35", `40-49 let` = "45",
`50-59 let` = "55", `60+ let` = "65") %>% as.integer())
class(df$věk)
levels(df$věk)
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = recode(věk, `18-29 let` = "25", `30-39 let` = "35", `40-49 let` = "45",
`50-59 let` = "55", `60+ let` = "65") %>% as.integer()) %>%
mutate(věk = rec(věk, rec = "18:29 = 25; 30:39 = 35; 40:49 = 45; 50:59 = 55; 60:max = 65"))
class(df$věk)
levels(df$věk)
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = recode(věk, `18-29 let` = "25", `30-39 let` = "35", `40-49 let` = "45",
`50-59 let` = "55", `60+ let` = "65") %>% as.integer()) %>%
mutate(věk = rec(věk, rec = "18:29 = 25; 30:39 = 35; 40:49 = 45; 50:59 = 55; 60:max = 65"))
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = recode(věk, `18-29 let` = "25", `30-39 let` = "35", `40-49 let` = "45",
`50-59 let` = "55", `60+ let` = "65") %>% as.integer())
df$věk
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = recode(věk, `18-29 let` = "25", `30-39 let` = "35", `40-49 let` = "45",
`50-59 let` = "55", `60+ let` = "65") %>% as.integer()) %>%
mutate(věk = rec(df$věk, rec = "18:29 = 25; 30:39 = 35; 40:49 = 45; 50:59 = 55; 60:max = 65"))
class(df$věk)
levels(df$věk)
df$věk
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = recode(věk, `18-29 let` = "25", `30-39 let` = "35", `40-49 let` = "45",
`50-59 let` = "55", `60+ let` = "65") %>% as.integer())
df$věk
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = recode(věk, `18-29 let` = "25", `30-39 let` = "35", `40-49 let` = "45",
`50-59 let` = "55", `60+ let` = "65") %>% as.integer()) %>%
mutate(věk = rec(df$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65"))
class(df$věk)
levels(df$věk)
df$věk
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk))
df$věk
sum(df$věk)
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk)) %>%
mutate(věk = rec(df$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65"))
sum(df$věk)
class(df$věk)
levels(df$věk)
df$věk
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk)) %>%
mutate(věk2 = rec(df$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65"))
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk)) %>%
mutate(věk2 = rec(df$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65")) %>% filter(is.na(věk2))
## Zkuste si sama srovnat věk a věk2 a rozhodněte se co dál, já tady dál dělám to, že ty podivné případy vyhazuju,
# věk2 uložím do věk a věk2 se zbavím. Rozhodněte se, co dál -- věk teď má 5 kategorií: 25, 35, 45, 55 a 65,
# Myslím, že je lze už takhle použít v regresi, ale můžete si z nich udělat faktory, to už zvládnete :)
df = df %>% filter(!is.na(věk2))
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk)) %>%
mutate(věk2 = rec(df$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65"))
names(data_spotreba) = c("pohlaví", "věk", "vzdělání", "zaměstnání hlavy rodiny", "velikost domácnosti", "počet dětí nad 18 let", "měsiční příjem domácnosti", "velikost místa bydliště", "měsíční příjem na osobu v domácnosti", "příjmy naší rodiny rostou pomaleji než ceny potravin", "CIL stravujete se celkově zdravěji", "CIL omezujete kalorickou hodnotu stravy", "CIL vybíráte si kvalitnější druhy potravin", "CIL omezujete spotřebu tuku", "CIL na jidle nešetřím, šetřím jinde")
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk)) %>%
mutate(věk2 = rec(df$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65"))
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0)))
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk)) %>%
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk)) %>%
mutate(věk2 = rec(df$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65"))
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk))
df = mutate(věk2 = rec(df$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65"))
df$věk2 = rec(df$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65")
## Zkuste si sama srovnat věk a věk2 a rozhodněte se co dál, já tady dál dělám to, že ty podivné případy vyhazuju,
# věk2 uložím do věk a věk2 se zbavím. Rozhodněte se, co dál -- věk teď má 5 kategorií: 25, 35, 45, 55 a 65,
# Myslím, že je lze už takhle použít v regresi, ale můžete si z nich udělat faktory, to už zvládnete :)
df = df %>% filter(!is.na(věk2))
## Zkuste si sama srovnat věk a věk2 a rozhodněte se co dál, já tady dál dělám to, že ty podivné případy vyhazuju,
# věk2 uložím do věk a věk2 se zbavím. Rozhodněte se, co dál -- věk teď má 5 kategorií: 25, 35, 45, 55 a 65,
# Myslím, že je lze už takhle použít v regresi, ale můžete si z nich udělat faktory, to už zvládnete :)
df = df %>% filter(!is.na(věk2)) %>% mutate(věk = věk2) %>% select(-věk2)
class(df$věk)
levels(df$věk)
df$věk
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(lubridate)
library(tibble)
library(forcats)
library(haven)
library(foreign)
library(tidyverse)
library(sjmisc)
library(dplyr)
#pro jistotu jsem si načetla různé knihovny
## Najdeme názvy souborů
archive = "CSDA00057 (3).zip"
files = unzip(archive, list = T) %>% filter(Length > 0)
View(files)
## Samotné načtení
moje_data = unz(archive, files$Name[1]) %>% read_sav()
# spotreba_csda <- read_sav("C:/Users/micha/AppData/Local/Temp/CSDA00057_F1_WIvhXp")
view(moje_data)
data_spotreba <- select(moje_data, z1, z2, z3, z4, z6, z7, z9, z10, x9, a67, a1, a2, a4, a8, a74)
glimpse(data_spotreba)
#právě jsem si vybrala jenom proměnné, které se mi hodí analyzovat (15 variables)
names(data_spotreba) = c("pohlaví", "věk", "vzdělání", "zaměstnání hlavy rodiny", "velikost domácnosti", "počet dětí nad 18 let", "měsiční příjem domácnosti", "velikost místa bydliště", "měsíční příjem na osobu v domácnosti", "příjmy naší rodiny rostou pomaleji než ceny potravin", "CIL stravujete se celkově zdravěji", "CIL omezujete kalorickou hodnotu stravy", "CIL vybíráte si kvalitnější druhy potravin", "CIL omezujete spotřebu tuku", "CIL na jidle nešetřím, šetřím jinde")
# view(data_spotreba)
# Tady si poraďte s věkem...
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk))
df$věk2 = rec(df$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65")
## Problém je, že je bordel v datech, nejsou tam jen kategorie věku 1--5 a pak věk 18+ jako číslo,
# ale i čísla věku 6--17, která nedpovídají ani kategorii, ani by tam nikdo takový věk neměl mít.
# Chvíli jsem myslel, že to mohou být děti, ale jako jedno z pozorování je tam třeba žena
# z jedočlenné domácnosti, údajně vyučená a věk 11 let...
# těch divných pozorování je 246, tak bych je vyhodil a pokračoval. Nebo si zkuste opatřit ta samá dat jako
# *.csv, protože tam asi dochází k problému převodu mezi *.sav a R. Další cesta je pořádně prostudovat
# dokumentaci k read_sav(), googlit stackOverflow, jestli už to někdo neřešil a dát třeba i dotaz na StackOverflow.
# A zkoušet, až to konečně zaklapne...
# No nevím, asi bude lepší těch 10% dat obětovat a jít dál, ne? :)
## Zkuste si sama srovnat věk a věk2 a rozhodněte se co dál, já tady dál dělám to, že ty podivné případy vyhazuju,
# věk2 uložím do věk a věk2 se zbavím. Rozhodněte se, co dál -- věk teď má 5 kategorií: 25, 35, 45, 55 a 65,
# Myslím, že je lze už takhle použít v regresi, ale můžete si z nich udělat faktory, to už zvládnete :)
df = df %>% filter(!is.na(věk2)) %>% mutate(věk = věk2) %>% select(-věk2)
class(df$věk)
levels(df$věk)
df$věk
# df$`CIL omezujete spotřebu tuku`
names(df) = c("pohlaví", "věk", "vzdělání", "zaměstnání hlavy rodiny", "velikost domácnosti", "počet dětí nad 18 let", "měsiční příjem domácnosti", "velikost místa bydliště", "měsíční příjem na osobu v domácnosti", "příjmy naší rodiny rostou pomaleji než ceny potravin", "stravujete se celkově zdravěji", "omezujete kalorickou hodnotu stravy", "vybíráte si kvalitnější druhy potravin", "omezujete spotřebu tuku", "na jidle nešetřím, šetřím jinde")
glimpse(df)
class(df)
names(data_spotreba) = c("pohlaví", "věk", "vzdělání", "zaměstnání hlavy rodiny", "velikost domácnosti", "počet dětí nad 18 let", "měsiční příjem domácnosti", "velikost místa bydliště", "měsíční příjem na osobu v domácnosti", "příjmy naší rodiny rostou pomaleji než ceny potravin", "CIL stravujete se celkově zdravěji", "CIL omezujete kalorickou hodnotu stravy", "CIL vybíráte si kvalitnější druhy potravin", "CIL omezujete spotřebu tuku", "CIL na jidle nešetřím, šetřím jinde")
# view(data_spotreba)
# Tady si poraďte s věkem...
df = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk))
df$věk2 = rec(df$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65")
## Problém je, že je bordel v datech, nejsou tam jen kategorie věku 1--5 a pak věk 18+ jako číslo,
# ale i čísla věku 6--17, která nedpovídají ani kategorii, ani by tam nikdo takový věk neměl mít.
# Chvíli jsem myslel, že to mohou být děti, ale jako jedno z pozorování je tam třeba žena
# z jedočlenné domácnosti, údajně vyučená a věk 11 let...
# těch divných pozorování je 246, tak bych je vyhodil a pokračoval. Nebo si zkuste opatřit ta samá dat jako
# *.csv, protože tam asi dochází k problému převodu mezi *.sav a R. Další cesta je pořádně prostudovat
# dokumentaci k read_sav(), googlit stackOverflow, jestli už to někdo neřešil a dát třeba i dotaz na StackOverflow.
# A zkoušet, až to konečně zaklapne...
# No nevím, asi bude lepší těch 10% dat obětovat a jít dál, ne? :)
## Zkuste si sama srovnat věk a věk2 a rozhodněte se co dál, já tady dál dělám to, že ty podivné případy vyhazuju,
# věk2 uložím do věk a věk2 se zbavím. Rozhodněte se, co dál -- věk teď má 5 kategorií: 25, 35, 45, 55 a 65,
# Myslím, že je lze už takhle použít v regresi, ale můžete si z nich udělat faktory, to už zvládnete :)
df = df %>% filter(!is.na(věk2)) %>% mutate(věk = věk2) %>% select(-věk2)
# class(df$věk)
# levels(df$věk)
# df$věk
# df$`CIL omezujete spotřebu tuku`
names(df) = c("pohlaví", "věk", "vzdělání", "zaměstnání hlavy rodiny", "velikost domácnosti", "počet dětí nad 18 let", "měsiční příjem domácnosti", "velikost místa bydliště", "měsíční příjem na osobu v domácnosti", "příjmy naší rodiny rostou pomaleji než ceny potravin", "stravujete se celkově zdravěji", "omezujete kalorickou hodnotu stravy", "vybíráte si kvalitnější druhy potravin", "omezujete spotřebu tuku", "na jidle nešetřím, šetřím jinde")
glimpse(df)
class(df)
names(data_spotreba) = c("pohlaví", "věk", "vzdělání", "zaměstnání hlavy rodiny", "velikost domácnosti", "počet dětí nad 18 let", "měsiční příjem domácnosti", "velikost místa bydliště", "měsíční příjem na osobu v domácnosti", "příjmy naší rodiny rostou pomaleji než ceny potravin", "CIL stravujete se celkově zdravěji", "CIL omezujete kalorickou hodnotu stravy", "CIL vybíráte si kvalitnější druhy potravin", "CIL omezujete spotřebu tuku", "CIL na jidle nešetřím, šetřím jinde")
# view(data_spotreba)
# Tady si poraďte s věkem...
dfx = data_spotreba %>%
mutate(across(everything(),  .fns = as_factor)) %>%
mutate(across(starts_with("CIL "), .fns = as.character))  %>%
mutate(across(starts_with("CIL "),
.fns =  ~recode(., ano = 1, ne = 0, nevi = -1,
souhlasi = 1, nesouhlasi = 0))) %>%
mutate(věk = as.integer(věk))
dfx$věk2 = rec(dfx$věk, rec = "1, 18:29 = 25; 2, 30:39 = 35; 3, 40:49 = 45; 4, 50:59 = 55; 5, 60:max = 65")
## Problém je, že je bordel v datech, nejsou tam jen kategorie věku 1--5 a pak věk 18+ jako číslo,
# ale i čísla věku 6--17, která nedpovídají ani kategorii, ani by tam nikdo takový věk neměl mít.
# Chvíli jsem myslel, že to mohou být děti, ale jako jedno z pozorování je tam třeba žena
# z jedočlenné domácnosti, údajně vyučená a věk 11 let...
# těch divných pozorování je 246, tak bych je vyhodil a pokračoval. Nebo si zkuste opatřit ta samá dat jako
# *.csv, protože tam asi dochází k problému převodu mezi *.sav a R. Další cesta je pořádně prostudovat
# dokumentaci k read_sav(), googlit stackOverflow, jestli už to někdo neřešil a dát třeba i dotaz na StackOverflow.
# A zkoušet, až to konečně zaklapne...
# No nevím, asi bude lepší těch 10% dat obětovat a jít dál, ne? :)
## Zkuste si sama srovnat věk a věk2 a rozhodněte se co dál, já tady dál dělám to, že ty podivné případy vyhazuju,
# věk2 uložím do věk a věk2 se zbavím. Rozhodněte se, co dál -- věk teď má 5 kategorií: 25, 35, 45, 55 a 65,
# Myslím, že je lze už takhle použít v regresi, ale můžete si z nich udělat faktory, to už zvládnete :)
df = dfx %>% filter(!is.na(věk2)) %>% mutate(věk = věk2) %>% select(-věk2)
# class(df$věk)
# levels(df$věk)
# df$věk
# df$`CIL omezujete spotřebu tuku`
names(df) = c("pohlaví", "věk", "vzdělání", "zaměstnání hlavy rodiny", "velikost domácnosti", "počet dětí nad 18 let", "měsiční příjem domácnosti", "velikost místa bydliště", "měsíční příjem na osobu v domácnosti", "příjmy naší rodiny rostou pomaleji než ceny potravin", "stravujete se celkově zdravěji", "omezujete kalorickou hodnotu stravy", "vybíráte si kvalitnější druhy potravin", "omezujete spotřebu tuku", "na jidle nešetřím, šetřím jinde")
glimpse(df)
class(df)
GET('http://207.154.245.100/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData.zip', overwrite = TRUE))
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0)
files
## Hlavička
rm(list = ls())
## Package
library(dplyr)
library(readr)
library(stringr)
library(httr)
library(ggplot2)
GET('http://207.154.245.100/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData.zip', overwrite = TRUE))
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0)
files
bonus = unz(archive, files$Name[1]) %>% read_csv() %>% rename(player = id, celkem = bonus)
emaily = unz(archive, files$Name[2]) %>% read_csv() %>% rename(email = value)
PGG = unz(archive, files$Name[4]) %>% read_csv()
Q1 = unz(archive, files$Name[5]) %>% read_csv()
Q2 = unz(archive, files$Name[6]) %>% read_csv()
for (f in 1:(nrow(files)/6 - 1)) {
bonus = unz(archive, files$Name[f*6 + 1]) %>% read_csv() %>%
rename(player = id, celkem = bonus) %>% rbind(bonus, .)
emaily = unz(archive, files$Name[f*6 + 2]) %>% read_csv() %>%
rename(email = value) %>% rbind(emaily, .)
PGG = unz(archive, files$Name[f*6 + 4]) %>% read_csv() %>% rbind(PGG, .)
Q1 = unz(archive, files$Name[f*6 + 5]) %>% read_csv() %>% rbind(Q1, .)
Q2 = unz(archive, files$Name[f*6 + 6]) %>% read_csv() %>% rbind(Q2, .)
}
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem)) %>%
select(names(vysledek)[1:4], soucetSkupiny, names(vysledek)[5:16])
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem)) %>%
select(names(vysledek)[1:4], soucetSkupiny, names(vysledek)[5:16])
bonus = unz(archive, files$Name[1]) %>% read_csv() %>% rename(player = id, celkem = bonus)
emaily = unz(archive, files$Name[2]) %>% read_csv() %>% rename(email = value)
PGG = unz(archive, files$Name[4]) %>% read_csv()
Q1 = unz(archive, files$Name[5]) %>% read_csv()
Q2 = unz(archive, files$Name[6]) %>% read_csv()
for (f in 1:(nrow(files)/6 - 1)) {
bonus = unz(archive, files$Name[f*6 + 1]) %>% read_csv() %>%
rename(player = id, celkem = bonus) %>% rbind(bonus, .)
emaily = unz(archive, files$Name[f*6 + 2]) %>% read_csv() %>%
rename(email = value) %>% rbind(emaily, .)
PGG = unz(archive, files$Name[f*6 + 4]) %>% read_csv() %>% rbind(PGG, .)
Q1 = unz(archive, files$Name[f*6 + 5]) %>% read_csv() %>% rbind(Q1, .)
Q2 = unz(archive, files$Name[f*6 + 6]) %>% read_csv() %>% rbind(Q2, .)
}
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))
vysledek = vysledek %>%
select(names(vysledek)[1:4], soucetSkupiny, names(vysledek)[5:16])
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem)
vyhodnoceni
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))
vysledek = vysledek %>%
select(names(.)[1:4], soucetSkupiny, names(.)[5:16])
vysledek
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))
vysledek = vysledek %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16])
vysledek
## Hlavička
rm(list = ls())
GET('http://207.154.245.100/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData.zip', overwrite = TRUE))
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0)
files
bonus = unz(archive, files$Name[1]) %>% read_csv() %>% rename(player = id, celkem = bonus)
emaily = unz(archive, files$Name[2]) %>% read_csv() %>% rename(email = value)
PGG = unz(archive, files$Name[4]) %>% read_csv()
Q1 = unz(archive, files$Name[5]) %>% read_csv()
Q2 = unz(archive, files$Name[6]) %>% read_csv()
for (f in 1:(nrow(files)/6 - 1)) {
bonus = unz(archive, files$Name[f*6 + 1]) %>% read_csv() %>%
rename(player = id, celkem = bonus) %>% rbind(bonus, .)
emaily = unz(archive, files$Name[f*6 + 2]) %>% read_csv() %>%
rename(email = value) %>% rbind(emaily, .)
PGG = unz(archive, files$Name[f*6 + 4]) %>% read_csv() %>% rbind(PGG, .)
Q1 = unz(archive, files$Name[f*6 + 5]) %>% read_csv() %>% rbind(Q1, .)
Q2 = unz(archive, files$Name[f*6 + 6]) %>% read_csv() %>% rbind(Q2, .)
}
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16])
vysledek
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem)
vyhodnoceni
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem) %>% filter(str_detect(email, "fake@"))
vyhodnoceni
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem) %>% filter(!str_detect(email, "fake@"))
vyhodnoceni
files
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(!str_detect(Name, ".json"))
files
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv"))
files
## Hlavička
rm(list = ls())
## Package
library(dplyr)
library(readr)
library(stringr)
library(httr)
library(ggplot2)
GET('http://207.154.245.100/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData.zip', overwrite = TRUE))
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv"))
files
bonus = unz(archive, files$Name[1]) %>% read_csv() %>% rename(player = id, celkem = bonus)
emaily = unz(archive, files$Name[2]) %>% read_csv() %>% rename(email = value)
PGG = unz(archive, files$Name[3]) %>% read_csv()
Q1 = unz(archive, files$Name[4]) %>% read_csv()
Q2 = unz(archive, files$Name[5]) %>% read_csv()
for (f in 1:(nrow(files)/5 - 1)) {
bonus = unz(archive, files$Name[f*5 + 1]) %>% read_csv() %>%
rename(player = id, celkem = bonus) %>% rbind(bonus, .)
emaily = unz(archive, files$Name[f*5 + 2]) %>% read_csv() %>%
rename(email = value) %>% rbind(emaily, .)
PGG = unz(archive, files$Name[f*5 + 3]) %>% read_csv() %>% rbind(PGG, .)
Q1 = unz(archive, files$Name[f*5 + 4]) %>% read_csv() %>% rbind(Q1, .)
Q2 = unz(archive, files$Name[f*5 + 5]) %>% read_csv() %>% rbind(Q2, .)
}
## Tohle jsou asi data, se kterými budete pracovat nejvíc --
# charakteristiky respondentů a jak ovlivňují celkový výsledek
vysledek = left_join(bonus, emaily) %>% left_join(Q1) %>% left_join(Q2, by = c("player", "session")) %>%
group_by(session) %>% mutate(soucetSkupiny = sum(celkem))  %>%
select(names(.)[1:3], soucetSkupiny, names(.)[4:16])
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem) %>% filter(!str_detect(email, "fake@"))
vyhodnoceni
## Na přehled vývoje hry asi bude stačit dfPGG, ale kdyby to bylo potřeba spojit s kontextovými dat,
# tak tady je to všechno spojené
celkova = left_join(PGG, vysledek, by = c("player", "session"))
celkova
## A takto si můžeme rovnou nechat vyjet pořadí hráčů!
vyhodnoceni = vysledek %>% ungroup() %>% arrange(., desc(soucetSkupiny), desc(celkem)) %>%
select(email, soucetSkupiny, celkem) #%>% filter(!str_detect(email, "fake@"))
vyhodnoceni
## Na přehled vývoje hry asi bude stačit dfPGG, ale kdyby to bylo potřeba spojit s kontextovými dat,
# tak tady je to všechno spojené
celkova = left_join(PGG, vysledek, by = c("player", "session"))
GET('http://207.154.245.100/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData.zip', overwrite = TRUE))
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv"))
files
GET('http://207.154.245.100/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData.zip', overwrite = TRUE))
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv"))
files
# ## Vývojový graf --------------------------------------------------------
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_line()
PGG %>% group_by(stage.round, session) %>% summarise(contribution = mean(contribution)) %>%
ggplot(aes(x = stage.round, y = contribution, col = session)) +
geom_line()
files
# ## Vývojový graf --------------------------------------------------------
ggplot(PGG, aes(x = stage.round, y = contribution, col = as.factor(player))) +
geom_line()
PGG %>% group_by(stage.round, session) %>% summarise(contribution = mean(contribution)) %>%
ggplot(aes(x = stage.round, y = contribution, col = session)) +
geom_line()
GET('http://207.154.245.100/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData.zip', overwrite = TRUE))
archive = "aktualniData.zip"
files = unzip(archive, list = T) %>%
filter(Length > 0) %>% filter(str_detect(Name, ".csv"))
files
GET('http://134.122.66.93/pgg/monitor/data/*',  ## Adresa naší hry
write_disk('aktualniData2.zip', overwrite = TRUE))
